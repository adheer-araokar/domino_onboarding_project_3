# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SearchFilterPredictionResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, records: List[object]=None):  # noqa: E501
        """SearchFilterPredictionResponse - a model defined in Swagger

        :param records: The records of this SearchFilterPredictionResponse.  # noqa: E501
        :type records: List[object]
        """
        self.swagger_types = {
            'records': List[object]
        }

        self.attribute_map = {
            'records': 'records'
        }
        self._records = records

    @classmethod
    def from_dict(cls, dikt) -> 'SearchFilterPredictionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The searchFilterPredictionResponse of this SearchFilterPredictionResponse.  # noqa: E501
        :rtype: SearchFilterPredictionResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def records(self) -> List[object]:
        """Gets the records of this SearchFilterPredictionResponse.


        :return: The records of this SearchFilterPredictionResponse.
        :rtype: List[object]
        """
        return self._records

    @records.setter
    def records(self, records: List[object]):
        """Sets the records of this SearchFilterPredictionResponse.


        :param records: The records of this SearchFilterPredictionResponse.
        :type records: List[object]
        """
        if records is None:
            raise ValueError("Invalid value for `records`, must not be `None`")  # noqa: E501

        self._records = records
